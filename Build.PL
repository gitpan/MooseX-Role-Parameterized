# This Build.PL for MooseX-Role-Parameterized was generated by
# Dist::Zilla::Plugin::ModuleBuildTiny::Fallback 0.005
if (eval 'use Module::Build::Tiny 0.037; 1')
{
    print "Congratulations, your toolchain understands 'configure_requires'!\n\n";

    # This section for MooseX-Role-Parameterized was generated by Dist::Zilla::Plugin::ModuleBuildTiny 0.006.
    use 5.008001;
    # use Module::Build::Tiny 0.037;
    Build_PL();
}
else
{
    $ENV{PERL_MB_FALLBACK_SILENCE_WARNING} or warn <<'EOW';
*** WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING ***

If you're seeing this warning, your toolchain is really, really old* and you'll
almost certainly have problems installing CPAN modules from this century. But
never fear, dear user, for we have the technology to fix this!

If you're using CPAN.pm to install things, then you can upgrade it using:

    cpan CPAN

If you're using CPANPLUS to install things, then you can upgrade it using:

    cpanp CPANPLUS

If you're using cpanminus, you shouldn't be seeing this message in the first
place, so please file an issue on github.

This public service announcement was brought to you by the Perl Toolchain
Gang, the irc.perl.org #toolchain IRC channel, and the number 42.

----

* Alternatively, you are running this file manually, in which case you need
to learn to first fulfill all configure requires prerequisites listed in
META.yml or META.json -- or use a cpan client to install this distribution.

You can also silence this warning for future installations by setting the
PERL_MB_FALLBACK_SILENCE_WARNING environment variable, but please don't do
that until you fix your toolchain as described above.

EOW
    sleep 10 if -t STDIN && (-t STDOUT || !(-f STDOUT || -c STDOUT));


    # This section was automatically generated by Dist::Zilla::Plugin::ModuleBuild v5.020.
    use strict;
    use warnings;

    require Module::Build; Module::Build->VERSION(0.28);


    my %module_build_args = (
      "build_requires" => {},
      "configure_requires" => {
        "ExtUtils::MakeMaker" => 0,
        "Module::Build::Tiny" => "0.037"
      },
      "dist_abstract" => "roles with composition parameters",
      "dist_author" => [
        "Shawn M Moore <code\@sartak.org>"
      ],
      "dist_name" => "MooseX-Role-Parameterized",
      "dist_version" => "1.08",
      "license" => "perl",
      "module_name" => "MooseX::Role::Parameterized",
      "recommends" => {},
      "recursive_test_files" => 1,
      "requires" => {
        "Carp" => 0,
        "Module::Runtime" => 0,
        "Moose" => "2.0300",
        "Moose::Exporter" => 0,
        "Moose::Meta::Role" => 0,
        "Moose::Role" => 0,
        "Moose::Util" => 0,
        "namespace::autoclean" => 0,
        "namespace::clean" => 0,
        "perl" => "5.008001"
      },
      "script_files" => [],
      "test_requires" => {
        "CPAN::Meta::Check" => "0.007",
        "CPAN::Meta::Requirements" => 0,
        "Data::Dumper" => 0,
        "ExtUtils::MakeMaker" => 0,
        "File::Spec" => 0,
        "Moose::Util::TypeConstraints" => 0,
        "MooseX::Role::WithOverloading" => 0,
        "Storable" => 0,
        "Test::Fatal" => 0,
        "Test::Moose" => 0,
        "Test::More" => "0.96",
        "Test::Requires" => 0,
        "lib" => 0,
        "overload" => 0,
        "strict" => 0,
        "warnings" => 0
      }
    );


    my %fallback_build_requires = (
      "CPAN::Meta::Check" => "0.007",
      "CPAN::Meta::Requirements" => 0,
      "Data::Dumper" => 0,
      "ExtUtils::MakeMaker" => 0,
      "File::Spec" => 0,
      "Moose::Util::TypeConstraints" => 0,
      "MooseX::Role::WithOverloading" => 0,
      "Storable" => 0,
      "Test::Fatal" => 0,
      "Test::Moose" => 0,
      "Test::More" => "0.96",
      "Test::Requires" => 0,
      "lib" => 0,
      "overload" => 0,
      "strict" => 0,
      "warnings" => 0
    );


    unless ( eval { Module::Build->VERSION(0.4004) } ) {
      delete $module_build_args{test_requires};
      $module_build_args{build_requires} = \%fallback_build_requires;
    }

    my $build = Module::Build->new(%module_build_args);

    $build->create_build_script;
}
